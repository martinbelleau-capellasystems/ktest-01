# Default values for capella-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# managerInstanceType: database and Cambria Cluster will be restricted to run on nodes of this instance type.  FTC will be forbidden to run on these
managerInstanceType: "g6-dedicated-2"

# ftcInstanceType: instance type for the FTC nodes which will be launched dynamically
ftcInstanceType: "g6-dedicated-8"

# maxFTCInstances: maximum number of FTC instances (ie replicas).  Set this to the number of FTCs that are licensed.
maxFTCInstances: 20

# pgInstances: number of postgresql database instances (ie replicas)
pgInstances: 3

# cambriaClusterReplicas: number of Cambria Cluster instances (ie replicas)
cambriaClusterReplicas: 3

image:
  cambriacluster: public.ecr.aws/s2v4r0j5/cambriacluster:dev_5.2.0.13303
  cpk8autoscaleftc: public.ecr.aws/s2v4r0j5/tools:cpk8autoscaleftc_1.0.0.14100
  cpleaderelector: public.ecr.aws/s2v4r0j5/tools:cpleaderelector_1.0.0.13038
  cambriaftc: public.ecr.aws/s2v4r0j5/cambriaftc:dev_5.2.0.13303
  ftcconnect: public.ecr.aws/s2v4r0j5/tools:cpkuftcconnect_1.0.0.12329
  postgres: postgres:14.7

secrets:
  # pgClusterPassword: password for the postgresql database
  pgClusterPassword: "xrtVeQ4nN82SSiYHoswqdURZvQDaL4KpNElsCEEe9bwdxMd73KckIeXzS5cU6LiC2"
  # pgClusterUsername: username for the postgresql database
  pgClusterUsername: "app"

  # ftcLicenseMode: FTC license mode
  ftcLicenseMode: "CryptlexV3HostedFloatingPerMachine"
  # ftcLicenseKey: FTC license key
  ftcLicenseKey: "111111-222222-D20478-6F74CF-E1CA87-6B9B1F"

  # cambriaClusterAPIToken: API token for Cambria Cluster.  Will need to be used for example to submit transcoding jobs via the Cambria Cluster API
  cambriaClusterAPIToken: "12345678-1234-43f8-b4fc-53afd3893d5f"

  # cambriaClusterWebUIUser: user/password to access Cambria Cluster web UI.  Comma-separate values with type (ie admin), username, and password
  cambriaClusterWebUIUser: "admin,defaultWebUIUser,RZvSSd3ffsElsCEEe9"

  # linodeAPIToken: Linode API token, used for horizontal scaling (to add and remove node pools automatically)
  linodeAPIToken: "d02732530a2bcfd4d028425eb55f366f746317eb7a80546e4516244ed392c987"

optionalInstall:
  enableEventing: true
